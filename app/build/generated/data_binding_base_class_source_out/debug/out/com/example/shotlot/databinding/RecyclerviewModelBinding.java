// Generated by view binder compiler. Do not edit!
package com.example.shotlot.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.CardView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import com.example.shotlot.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerviewModelBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView CardView;

  @NonNull
  public final ImageButton LikeButton;

  @NonNull
  public final ImageButton collection;

  @NonNull
  public final ImageButton commentsButton;

  @NonNull
  public final TextView itemCaption;

  @NonNull
  public final EditText itemComment;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextView itemLikes;

  @NonNull
  public final TextView itemName;

  @NonNull
  public final CircleImageView itemProfileimage;

  @NonNull
  public final ImageButton messageButton2;

  @NonNull
  public final ImageButton moreButton;

  @NonNull
  public final TextView uploadedTime;

  private RecyclerviewModelBinding(@NonNull CardView rootView, @NonNull CardView CardView,
      @NonNull ImageButton LikeButton, @NonNull ImageButton collection,
      @NonNull ImageButton commentsButton, @NonNull TextView itemCaption,
      @NonNull EditText itemComment, @NonNull ImageView itemImage, @NonNull TextView itemLikes,
      @NonNull TextView itemName, @NonNull CircleImageView itemProfileimage,
      @NonNull ImageButton messageButton2, @NonNull ImageButton moreButton,
      @NonNull TextView uploadedTime) {
    this.rootView = rootView;
    this.CardView = CardView;
    this.LikeButton = LikeButton;
    this.collection = collection;
    this.commentsButton = commentsButton;
    this.itemCaption = itemCaption;
    this.itemComment = itemComment;
    this.itemImage = itemImage;
    this.itemLikes = itemLikes;
    this.itemName = itemName;
    this.itemProfileimage = itemProfileimage;
    this.messageButton2 = messageButton2;
    this.moreButton = moreButton;
    this.uploadedTime = uploadedTime;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerviewModelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerviewModelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclerview_model, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerviewModelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView CardView = (CardView) rootView;

      id = R.id.LikeButton;
      ImageButton LikeButton = rootView.findViewById(id);
      if (LikeButton == null) {
        break missingId;
      }

      id = R.id.collection;
      ImageButton collection = rootView.findViewById(id);
      if (collection == null) {
        break missingId;
      }

      id = R.id.commentsButton;
      ImageButton commentsButton = rootView.findViewById(id);
      if (commentsButton == null) {
        break missingId;
      }

      id = R.id.item_caption;
      TextView itemCaption = rootView.findViewById(id);
      if (itemCaption == null) {
        break missingId;
      }

      id = R.id.item_comment;
      EditText itemComment = rootView.findViewById(id);
      if (itemComment == null) {
        break missingId;
      }

      id = R.id.item_image;
      ImageView itemImage = rootView.findViewById(id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.item_likes;
      TextView itemLikes = rootView.findViewById(id);
      if (itemLikes == null) {
        break missingId;
      }

      id = R.id.item_name;
      TextView itemName = rootView.findViewById(id);
      if (itemName == null) {
        break missingId;
      }

      id = R.id.item_profileimage;
      CircleImageView itemProfileimage = rootView.findViewById(id);
      if (itemProfileimage == null) {
        break missingId;
      }

      id = R.id.messageButton2;
      ImageButton messageButton2 = rootView.findViewById(id);
      if (messageButton2 == null) {
        break missingId;
      }

      id = R.id.moreButton;
      ImageButton moreButton = rootView.findViewById(id);
      if (moreButton == null) {
        break missingId;
      }

      id = R.id.uploadedTime;
      TextView uploadedTime = rootView.findViewById(id);
      if (uploadedTime == null) {
        break missingId;
      }

      return new RecyclerviewModelBinding((CardView) rootView, CardView, LikeButton, collection,
          commentsButton, itemCaption, itemComment, itemImage, itemLikes, itemName,
          itemProfileimage, messageButton2, moreButton, uploadedTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
