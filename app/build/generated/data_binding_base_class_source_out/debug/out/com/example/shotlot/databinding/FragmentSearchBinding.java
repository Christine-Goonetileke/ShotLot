// Generated by view binder compiler. Do not edit!
package com.example.shotlot.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.SearchView;
import android.widget.TextView;
import com.example.shotlot.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final SearchView EditSearchName;

  @NonNull
  public final Button SearchResult1;

  @NonNull
  public final Button SearchResult2;

  @NonNull
  public final Button SearchResult3;

  @NonNull
  public final Button SearchResult4;

  @NonNull
  public final Button SearchResult5;

  @NonNull
  public final Button SearchResult6;

  @NonNull
  public final TextView searchSuggestions;

  @NonNull
  public final TextView textSearch;

  private FragmentSearchBinding(@NonNull RelativeLayout rootView,
      @NonNull SearchView EditSearchName, @NonNull Button SearchResult1,
      @NonNull Button SearchResult2, @NonNull Button SearchResult3, @NonNull Button SearchResult4,
      @NonNull Button SearchResult5, @NonNull Button SearchResult6,
      @NonNull TextView searchSuggestions, @NonNull TextView textSearch) {
    this.rootView = rootView;
    this.EditSearchName = EditSearchName;
    this.SearchResult1 = SearchResult1;
    this.SearchResult2 = SearchResult2;
    this.SearchResult3 = SearchResult3;
    this.SearchResult4 = SearchResult4;
    this.SearchResult5 = SearchResult5;
    this.SearchResult6 = SearchResult6;
    this.searchSuggestions = searchSuggestions;
    this.textSearch = textSearch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EditSearchName;
      SearchView EditSearchName = rootView.findViewById(id);
      if (EditSearchName == null) {
        break missingId;
      }

      id = R.id.SearchResult1;
      Button SearchResult1 = rootView.findViewById(id);
      if (SearchResult1 == null) {
        break missingId;
      }

      id = R.id.SearchResult2;
      Button SearchResult2 = rootView.findViewById(id);
      if (SearchResult2 == null) {
        break missingId;
      }

      id = R.id.SearchResult3;
      Button SearchResult3 = rootView.findViewById(id);
      if (SearchResult3 == null) {
        break missingId;
      }

      id = R.id.SearchResult4;
      Button SearchResult4 = rootView.findViewById(id);
      if (SearchResult4 == null) {
        break missingId;
      }

      id = R.id.SearchResult5;
      Button SearchResult5 = rootView.findViewById(id);
      if (SearchResult5 == null) {
        break missingId;
      }

      id = R.id.SearchResult6;
      Button SearchResult6 = rootView.findViewById(id);
      if (SearchResult6 == null) {
        break missingId;
      }

      id = R.id.searchSuggestions;
      TextView searchSuggestions = rootView.findViewById(id);
      if (searchSuggestions == null) {
        break missingId;
      }

      id = R.id.text_search;
      TextView textSearch = rootView.findViewById(id);
      if (textSearch == null) {
        break missingId;
      }

      return new FragmentSearchBinding((RelativeLayout) rootView, EditSearchName, SearchResult1,
          SearchResult2, SearchResult3, SearchResult4, SearchResult5, SearchResult6,
          searchSuggestions, textSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
